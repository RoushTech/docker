#!/usr/bin/env bash
source /usr/local/share/common.sh
(
	echo "Starting PHP-FPM"
	# if PHP_MEMORY_LIMIT is set, set it in the php.ini
	if [ -n "${PHP_MEMORY_LIMIT-}" ]; then
		echo "Setting PHP memory limit to ${COLOR_YELLOW}${PHP_MEMORY_LIMIT}${COLOR_RESET} . You can override this with the ${COLOR_YELLOW}PHP_MEMORY_LIMIT${COLOR_RESET} environment variable."
		sed -i "s/memory_limit = .*/memory_limit = ${PHP_MEMORY_LIMIT}/" /etc/php/php.ini
	fi
	if [ -n "${PHP_CLI_MEMORY_LIMIT-}" ]; then
		echo "Setting PHP CLI memory limit to ${COLOR_YELLOW}${PHP_CLI_MEMORY_LIMIT}${COLOR_RESET} . You can override this with the ${COLOR_YELLOW}PHP_CLI_MEMORY_LIMIT${COLOR_RESET} environment variable."
		sed -i "s/memory_limit = .*/memory_limit = ${PHP_CLI_MEMORY_LIMIT}/" /etc/php/php-cli.ini
	fi

	# if PHP_ERROR_REPORTING is set, set it in the php.ini
	if [ -n "${PHP_ERROR_REPORTING}" ]; then
		echo "Setting PHP ${COLOR_YELLOW}error_reporting${COLOR_RESET} to ${COLOR_YELLOW}${PHP_ERROR_REPORTING}${COLOR_RESET}. You can override this with the ${COLOR_YELLOW}PHP_ERROR_REPORTING${COLOR_RESET} environment variable."
	fi

	# if PHP_DISPLAY_ERRORS is set, set it in the php.ini
	if [ -n "${PHP_DISPLAY_ERRORS}" ]; then
		echo "Setting PHP ${COLOR_YELLOW}display_errors${COLOR_RESET} to ${COLOR_YELLOW}${PHP_DISPLAY_ERRORS}${COLOR_RESET}. You can override this with the ${COLOR_YELLOW}PHP_DISPLAY_ERRORS${COLOR_RESET} environment variable."
	fi

	if [ "${PHP_DEBUG_MODE-}" = "on" ]; then
		echo "Debug mode is enabled. You can override this by setting ${COLOR_YELLOW}PHP_DEBUG_MODE${COLOR_RESET} to off. Setting PHP error reporting to E_ALL and enabling DISPLAY_ERRORS."
		PHP_ERROR_REPORTING="${PHP_ERROR_REPORTING:-E_ALL}"
		PHP_DISPLAY_ERRORS="${PHP_DISPLAY_ERRORS:-On}"
		PHP_ENABLE_XDEBUG="${PHP_ENABLE_XDEBUG:-On}"
	else
		echo "Debug mode is disabled. You can override this by setting ${COLOR_YELLOW}PHP_DEBUG_MODE${COLOR_RESET} to on. Setting PHP error reporting to E_ERROR and disabling DISPLAY_ERRORS"
		PHP_ERROR_REPORTING="${PHP_ERROR_REPORTING:-E_ERROR}"
		PHP_DISPLAY_ERRORS="${PHP_DISPLAY_ERRORS:-Off}"
		PHP_ENABLE_XDEBUG="${PHP_ENABLE_XDEBUG:-Off}"
	fi

	# if PHP_ENABLE_XDEBUG is "off" or "Off", remove xdebug configuration
	if [ "${PHP_ENABLE_XDEBUG,,}" = "off" ]; then
		echo "Xdebug is ${COLOR_GREEN}disabled${COLOR_RESET}. You can enable it by setting ${COLOR_YELLOW}PHP_ENABLE_XDEBUG=On${COLOR_RESET}."
		rm -f /etc/php/conf.d/*_xdebug.ini
	else
		echo "Xdebug is ${COLOR_RED}enabled${COLOR_RESET}. You can disable it by setting ${COLOR_YELLOW}PHP_ENABLE_XDEBUG=Off${COLOR_RESET}."
	fi

	# Allow tuning php-fpm settings via environment variables
	# e.g setting pm.max_children with PHP_FPM_PM_MAX_CHILDREN=10
	for var in $(env | grep '^PHP_FPM_' | cut -d= -f1); do
		# Remove the prefix "PHP_FPM_" from the variable name
		fpm_var_name=$(echo "$var" | sed 's/^PHP_FPM_//')
		# lowercase
		fpm_var_name=$(echo "$fpm_var_name" | tr '[:upper:]' '[:lower:]')
		# replace "PM_" with "pm."
		fpm_var_name=$(echo "$fpm_var_name" | sed 's|^pm_|pm.|')

		# Set the variable in the php-fpm configuration
		echo "Setting PHP-FPM variable ${COLOR_YELLOW}${fpm_var_name}${COLOR_RESET} to ${COLOR_YELLOW}${!var}${COLOR_RESET} because ${COLOR_YELLOW}${var}${COLOR_RESET} was set."
		sed -i "s/^\(${fpm_var_name}\s*=\s*\).*/\1${!var}/" /etc/php/php-fpm.d/www.conf
	done

	echo "PHP_ERROR_REPORTING is ${COLOR_YELLOW}${PHP_ERROR_REPORTING}${COLOR_RESET}"

	sed -i "s/error_reporting = .*/error_reporting = ${PHP_ERROR_REPORTING}/" /etc/php/php.ini
	sed -i "s/display_errors = .*/display_errors = ${PHP_DISPLAY_ERRORS}/" /etc/php/php.ini

	env | sed "s/\(.*\)=\(.*\)/env[\1]='\2'/" >/etc/php/conf.d/env.conf

	php-fpm -F \
		-c /etc/php/ \
		-y /etc/php/php-fpm.conf

) 2>&1 | (while IFS= read -r; do echo "${COLOR_RESET}[${DIR}] $REPLY"; done)
